# /data/mlops/DRST-SoftwarizedNetworks/docker/dockerfile
# syntax=docker/dockerfile:1.6

######## 0) deps — 安装依赖到独立 venv（便于层复用） ########
FROM python:3.10-slim AS deps
ENV PIP_DISABLE_PIP_VERSION_CHECK=1 PIP_NO_CACHE_DIR=1 \
    PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1
RUN apt-get update && apt-get install -y --no-install-recommends \
      gcc g++ curl ca-certificates git \
    && rm -rf /var/lib/apt/lists/*

RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

WORKDIR /opt/src
COPY requirements.txt .
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --upgrade pip && pip install -r requirements.txt

######## 1) base — 运行时基础层 ########
FROM python:3.10-slim AS base
ENV PATH="/opt/venv/bin:$PATH" PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1
# 在基础层固定 APP_DIR 和 PYTHONPATH，让组件里无需再设置
ENV APP_DIR=/app PYTHONPATH=/app

# 仅带上依赖（不带编译工具）
COPY --from=deps /opt/venv /opt/venv

WORKDIR /app

# 共享代码（尽量稳定，减少重建）
COPY drst_common ./drst_common
COPY requirements.txt ./requirements.txt
# 如需把本地包安装成可编辑包，可在这里 pip install -e .
# 但通常我们直接靠 PYTHONPATH=/app + 包内 __init__.py 即可。

######## 2) 各组件镜像（只拷贝自身代码） ########

# 2.1 offline
FROM base AS offline
COPY drst_inference/offline ./drst_inference/offline
# 若离线训练需要本地样例数据，可一并拷贝（可选）
COPY datasets ./datasets
CMD ["bash","-lc","python -V && echo offline image ready"]

# 2.2 monitor
FROM base AS monitor
COPY drst_drift ./drst_drift
CMD ["bash","-lc","python -V && echo monitor image ready"]

# 2.3 producer
FROM base AS producer
COPY drst_inference/online ./drst_inference/online
CMD ["bash","-lc","python -V && echo producer image ready"]

# 2.4 infer
FROM base AS infer
COPY drst_inference/online ./drst_inference/online
COPY drst_inference/offline ./drst_inference/offline
CMD ["bash","-lc","python -V && echo infer image ready"]

# 2.5 plot
FROM base AS plot
COPY drst_inference/plotting ./drst_inference/plotting
CMD ["bash","-lc","python -V && echo plot image ready"]
