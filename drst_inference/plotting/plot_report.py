#!/usr/bin/env python3
# drst_inference/plotting/plot_report.py
from __future__ import annotations
import os, io, json
from datetime import datetime, timezone

from drst_common.minio_helper import s3, save_bytes
from drst_common.config import BUCKET, RESULT_DIR

def _read_text(key: str) -> str:
    try:
        return s3.get_object(Bucket=BUCKET, Key=key)["Body"].read().decode()
    except Exception:
        return ""

def _list(prefix: str):
    return s3.list_objects_v2(Bucket=BUCKET, Prefix=prefix).get("Contents", []) or []

def main():
    # Metrics summary table
    metrics_csv_key = f"{RESULT_DIR}/metrics_summary.csv"
    csv_text = _read_text(metrics_csv_key)

    md = []
    md.append(f"# DRST Report\n")
    md.append(f"- Generated at: {datetime.now(timezone.utc).isoformat().replace('+00:00','Z')}\n")
    md.append(f"- Metrics CSV: `s3://{BUCKET}/{metrics_csv_key}`\n")

    # Insert two plots (generated by plot_final.py)
    imgs = {o["Key"] for o in _list(f"{RESULT_DIR}/") if o["Key"].endswith('.png')}
    for name in ("plot_final_timeseries.png", "plot_final_relerr.png"):
        k = f"{RESULT_DIR}/{name}"
        if k in imgs:
            md.append(f"![{name}](attachment://{name})")

    # Also embed the first few lines of the CSV for quick glance
    if csv_text:
        head = csv_text.splitlines()[:6]
        md.append("\n```\n" + "\n".join(head) + "\n```\n")

    body = "\n\n".join(md).encode()
    save_bytes(f"{RESULT_DIR}/report.md", body, "text/markdown")
    print("[plot_report] report.md uploaded")

if __name__ == "__main__":
    main()
