# PIPELINE DEFINITION
# Name: drift-stream-v2
# Description: Drift monitoring + dynamic retraining + online inference (v2) â€” simplified
# Inputs:
#    kafka_topic: str [Default: 'latencyTopic']
#    monitor_max_wall_secs: int [Default: 0.0]
#    producer_interval_ms: int [Default: 200.0]
#    producer_stages: str [Default: '']
components:
  comp-infer-op:
    executorLabel: exec-infer-op
    inputDefinitions:
      parameters:
        kafka_topic:
          defaultValue: latencyTopic
          isOptional: true
          parameterType: STRING
        replica_id:
          parameterType: NUMBER_INTEGER
  comp-infer-op-2:
    executorLabel: exec-infer-op-2
    inputDefinitions:
      parameters:
        kafka_topic:
          defaultValue: latencyTopic
          isOptional: true
          parameterType: STRING
        replica_id:
          parameterType: NUMBER_INTEGER
  comp-infer-op-3:
    executorLabel: exec-infer-op-3
    inputDefinitions:
      parameters:
        kafka_topic:
          defaultValue: latencyTopic
          isOptional: true
          parameterType: STRING
        replica_id:
          parameterType: NUMBER_INTEGER
  comp-monitor-op:
    executorLabel: exec-monitor-op
    inputDefinitions:
      parameters:
        max_wall_secs:
          defaultValue: 0.0
          isOptional: true
          parameterType: NUMBER_INTEGER
  comp-offline-training-op:
    executorLabel: exec-offline-training-op
  comp-plot-op:
    executorLabel: exec-plot-op
  comp-producer-op:
    executorLabel: exec-producer-op
    inputDefinitions:
      parameters:
        interval_ms:
          defaultValue: 200.0
          isOptional: true
          parameterType: NUMBER_INTEGER
        kafka_topic:
          defaultValue: latencyTopic
          isOptional: true
          parameterType: STRING
        producer_stages:
          defaultValue: ''
          isOptional: true
          parameterType: STRING
  comp-retrain-op:
    executorLabel: exec-retrain-op
    inputDefinitions:
      parameters:
        poll_interval_s:
          defaultValue: 2.0
          isOptional: true
          parameterType: NUMBER_INTEGER
        watch:
          defaultValue: true
          isOptional: true
          parameterType: BOOLEAN
deploymentSpec:
  executors:
    exec-infer-op:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - infer_op
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.12.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef infer_op(\n    replica_id: int,\n    kafka_topic: str = \"latencyTopic\"\
          ,\n) -> None:\n    import os, subprocess\n    os.environ[\"PYTHONPATH\"\
          ] = \"/app\"\n    if kafka_topic:\n        os.environ[\"KAFKA_TOPIC\"] =\
          \ str(kafka_topic)\n    os.environ[\"INFER_REPLICA_ID\"] = str(int(replica_id))\n\
          \    subprocess.run([\"python\", \"-m\", \"drst_inference.online.inference_consumer\"\
          ], check=True)\n\n"
        image: hirschazer/infer:latest
    exec-infer-op-2:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - infer_op
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.12.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef infer_op(\n    replica_id: int,\n    kafka_topic: str = \"latencyTopic\"\
          ,\n) -> None:\n    import os, subprocess\n    os.environ[\"PYTHONPATH\"\
          ] = \"/app\"\n    if kafka_topic:\n        os.environ[\"KAFKA_TOPIC\"] =\
          \ str(kafka_topic)\n    os.environ[\"INFER_REPLICA_ID\"] = str(int(replica_id))\n\
          \    subprocess.run([\"python\", \"-m\", \"drst_inference.online.inference_consumer\"\
          ], check=True)\n\n"
        image: hirschazer/infer:latest
    exec-infer-op-3:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - infer_op
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.12.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef infer_op(\n    replica_id: int,\n    kafka_topic: str = \"latencyTopic\"\
          ,\n) -> None:\n    import os, subprocess\n    os.environ[\"PYTHONPATH\"\
          ] = \"/app\"\n    if kafka_topic:\n        os.environ[\"KAFKA_TOPIC\"] =\
          \ str(kafka_topic)\n    os.environ[\"INFER_REPLICA_ID\"] = str(int(replica_id))\n\
          \    subprocess.run([\"python\", \"-m\", \"drst_inference.online.inference_consumer\"\
          ], check=True)\n\n"
        image: hirschazer/infer:latest
    exec-monitor-op:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - monitor_op
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.12.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef monitor_op(\n    max_wall_secs: int = 0,   # \u9ED8\u8BA4 0=\u5173\
          \u95ED\u5899\u65F6\u957F\uFF0C\u53EA\u6309 idle \u8D85\u65F6\u9000\u51FA\
          \n) -> None:\n    import os, subprocess\n    os.environ[\"PYTHONPATH\"]\
          \ = \"/app\"\n    # \u4EC5\u5F53 >0 \u65F6\u624D\u8BBE\u7F6E\uFF0C\u907F\
          \u514D\u65E0\u610F\u4E2D\u542F\u7528\u5899\u65F6\u957F\n    if int(max_wall_secs)\
          \ > 0:\n        os.environ[\"MAX_WALL_SECS\"] = str(int(max_wall_secs))\n\
          \    subprocess.run([\"python\", \"-m\", \"drst_drift.monitor\"], check=True)\n\
          \n"
        image: hirschazer/monitor:latest
    exec-offline-training-op:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - offline_training_op
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.12.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef offline_training_op() -> None:\n    import os, subprocess\n \
          \   os.environ[\"PYTHONPATH\"] = \"/app\"\n    subprocess.run([\"python\"\
          , \"-m\", \"drst_inference.offline.train_offline\"], check=True)\n\n"
        image: hirschazer/offline:latest
    exec-plot-op:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - plot_op
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.12.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef plot_op() -> None:\n    import os, subprocess\n    os.environ[\"\
          PYTHONPATH\"] = \"/app\"\n    try:\n        subprocess.run([\"python\",\
          \ \"-m\", \"drst_inference.plotting.plot_final\"], check=True)\n    except\
          \ Exception as e:\n        print(f\"[plot_final] skipped: {e}\", flush=True)\n\
          \    try:\n        subprocess.run([\"python\", \"experiments/kubeflow/summarize_resources.py\"\
          ], check=True)\n    except Exception as e:\n        print(f\"[plot_op] summarize_resources.py\
          \ skipped: {e}\", flush=True)\n    try:\n        subprocess.run([\"python\"\
          , \"-m\", \"drst_inference.plotting.plot_report\"], check=True)\n    except\
          \ Exception as e:\n        print(f\"[plot_report] skipped: {e}\", flush=True)\n\
          \n"
        image: hirschazer/plot:latest
    exec-producer-op:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - producer_op
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.12.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef producer_op(\n    kafka_topic: str = \"latencyTopic\",\n    interval_ms:\
          \ int = 200,\n    producer_stages: str = \"\",\n) -> None:\n    import os,\
          \ subprocess\n    os.environ[\"PYTHONPATH\"] = \"/app\"\n    if kafka_topic:\n\
          \        os.environ[\"KAFKA_TOPIC\"] = str(kafka_topic)\n    os.environ[\"\
          INTERVAL_MS\"] = str(int(interval_ms))\n    if producer_stages:\n      \
          \  os.environ[\"PRODUCER_STAGES\"] = producer_stages\n    subprocess.run([\"\
          python\", \"-m\", \"drst_inference.online.producer\"], check=True)\n\n"
        image: hirschazer/producer:latest
    exec-retrain-op:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - retrain_op
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.12.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef retrain_op(\n    watch: bool = True,\n    poll_interval_s: int\
          \ = 2,\n) -> None:\n    \"\"\"\n    retrain watcher\uFF1A\u4E0D\u518D\u8BBE\
          \u7F6E MAX_WALL_SECS\uFF0C\u9ED8\u8BA4\u65E0\u9650\u5B88\u62A4\uFF0C\n \
          \   \u4EC5\u5904\u7406\u9501\u5E76\u201C\u8DDF\u968F monitor_done.flag\u201D\
          \u9000\u51FA\uFF08\u903B\u8F91\u5728 dynamic_retrain.py \u91CC\uFF09\u3002\
          \n    \"\"\"\n    import os, subprocess\n    os.environ[\"PYTHONPATH\"]\
          \ = \"/app\"\n    os.environ[\"RETRAIN_WATCH\"]   = \"1\" if watch else\
          \ \"0\"\n    os.environ[\"POLL_INTERVAL_S\"] = str(int(poll_interval_s))\n\
          \    # \u523B\u610F\u4E0D\u8BBE\u7F6E MAX_WALL_SECS\uFF1A\u8BA9 watcher\
          \ \u4E0D\u53D7\u5899\u65F6\u957F\u5F71\u54CD\n    subprocess.run([\"python\"\
          , \"-m\", \"drst_drift.dynamic_retrain\"], check=True)\n\n"
        image: hirschazer/retrain:latest
pipelineInfo:
  description: "Drift monitoring + dynamic retraining + online inference (v2) \u2014\
    \ simplified"
  name: drift-stream-v2
root:
  dag:
    tasks:
      infer-op:
        cachingOptions: {}
        componentRef:
          name: comp-infer-op
        dependentTasks:
        - offline-training-op
        inputs:
          parameters:
            kafka_topic:
              componentInputParameter: kafka_topic
            replica_id:
              runtimeValue:
                constant: 0.0
        taskInfo:
          name: infer-op
      infer-op-2:
        cachingOptions: {}
        componentRef:
          name: comp-infer-op-2
        dependentTasks:
        - offline-training-op
        inputs:
          parameters:
            kafka_topic:
              componentInputParameter: kafka_topic
            replica_id:
              runtimeValue:
                constant: 1.0
        taskInfo:
          name: infer-op-2
      infer-op-3:
        cachingOptions: {}
        componentRef:
          name: comp-infer-op-3
        dependentTasks:
        - offline-training-op
        inputs:
          parameters:
            kafka_topic:
              componentInputParameter: kafka_topic
            replica_id:
              runtimeValue:
                constant: 2.0
        taskInfo:
          name: infer-op-3
      monitor-op:
        cachingOptions: {}
        componentRef:
          name: comp-monitor-op
        dependentTasks:
        - offline-training-op
        inputs:
          parameters:
            max_wall_secs:
              componentInputParameter: monitor_max_wall_secs
        taskInfo:
          name: monitor-op
      offline-training-op:
        cachingOptions: {}
        componentRef:
          name: comp-offline-training-op
        taskInfo:
          name: offline-training-op
      plot-op:
        cachingOptions: {}
        componentRef:
          name: comp-plot-op
        dependentTasks:
        - infer-op
        - infer-op-2
        - infer-op-3
        - monitor-op
        - producer-op
        - retrain-op
        taskInfo:
          name: plot-op
      producer-op:
        cachingOptions: {}
        componentRef:
          name: comp-producer-op
        dependentTasks:
        - offline-training-op
        inputs:
          parameters:
            interval_ms:
              componentInputParameter: producer_interval_ms
            kafka_topic:
              componentInputParameter: kafka_topic
            producer_stages:
              componentInputParameter: producer_stages
        taskInfo:
          name: producer-op
      retrain-op:
        cachingOptions: {}
        componentRef:
          name: comp-retrain-op
        dependentTasks:
        - offline-training-op
        inputs:
          parameters:
            poll_interval_s:
              runtimeValue:
                constant: 2.0
            watch:
              runtimeValue:
                constant: true
        taskInfo:
          name: retrain-op
  inputDefinitions:
    parameters:
      kafka_topic:
        defaultValue: latencyTopic
        isOptional: true
        parameterType: STRING
      monitor_max_wall_secs:
        defaultValue: 0.0
        isOptional: true
        parameterType: NUMBER_INTEGER
      producer_interval_ms:
        defaultValue: 200.0
        isOptional: true
        parameterType: NUMBER_INTEGER
      producer_stages:
        defaultValue: ''
        isOptional: true
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.12.2
